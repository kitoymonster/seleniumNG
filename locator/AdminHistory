
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class AdminHistory {
	public static WebElement element = null;


	public static WebElement btnFiltering(WebDriver driver) {
		TraceLog.start("AdminHistory.btnFiltering");
		
		element = GetElementBy.byCssSelector(driver, "div.ui.icon.right.labeled.primary.button");
		
		TraceLog.ended("AdminHistory.btnFiltering");
		return element;
	}
	
	public static WebElement sortTransactionDate(WebDriver driver) {
		TraceLog.start("AdminHistory.sortTransactionDate");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[1]/div[1]/div[1]/span[1]");
		
		TraceLog.ended("AdminHistory.sortTransactionDate");
		return element;
	}
	
	public static WebElement sortDescription(WebDriver driver) {
		TraceLog.start("AdminHistory.sortDescription");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[2]/div[2]/div[1]/span[1]");
		
		TraceLog.ended("AdminHistory.sortDescription");
		return element;
	}

	public static WebElement sortUser(WebDriver driver) {
		TraceLog.start("AdminHistory.sortUser");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[3]/div[2]/div[1]/span[1]");
		
		TraceLog.start("AdminHistory.sortUser");
		return element;
	}
	
	public static WebElement sortRole(WebDriver driver) {
		TraceLog.start("AdminHistory.sortCategory");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[4]/div[2]/div[1]/span[1]");
		
		TraceLog.ended("AdminHistory.sortCategory");
		return element;
	}
	
	public static WebElement header(WebDriver driver) {
		TraceLog.start("AdminHistory.header");
		
		element = GetElementBy.byXpath(driver, "//*[@id='activity']/div[1]/span");
		
		TraceLog.ended("AdminHistory.header");
		return element;
	}
	
	
	public static List<WebElement> columnResize(WebDriver driver) {
		TraceLog.start("AdminHistory.header");
		
		List<WebElement> elements = null;
		elements = GetElementsBy.byCssSelector(driver, "div.ui-grid-column-resizer.ng-scope.ng-isolate-scope.right");
		
		TraceLog.ended("AdminHistory.header");
		return elements;
	}

	// filter - description
	public static WebElement filterDescriptionText(WebDriver driver) throws InterruptedException {
		TraceLog.start("AdminHistory.filterDescriptionText");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[2]/div[2]/div[2]/div/div/input");
				
		TraceLog.ended("AdminHistory.filterDescriptionText");
		return element;
	}
	
	public static WebElement filterUserText(WebDriver driver) throws InterruptedException {
		TraceLog.start("AdminHistory.filterUserText");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[3]/div[2]/div[2]/div/div/input");
		
		TraceLog.ended("AdminHistory.filterUserText");
		return element;
	}

	public static WebElement filterRoleText(WebDriver driver) throws InterruptedException {
		TraceLog.start("AdminHistory.filterRoleText");
		
		element = GetElementBy.byXpath(driver, "html/body/div[1]/div[2]/div/section/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div[1]/div[1]/div/div/div/div/div/div[4]/div[2]/div[2]/div/div/input");
		
		TraceLog.ended("AdminHistory.filterRoleText");
		return element;
	}
	
}
